= simple_form_for(@usable_card) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?
  .form-inputs
    .ui.form
      .ui.two.column.grid
        .column
          .ui.field
            = f.input :image_url
          .ui.field
            = f.input :name
          .ui.field
            = f.input :legion, label: "Legion", collection: ['White', 'Green', 'Black', 'Blue'], input_html: { class: 'ui search dropdown'}
          .ui.field
            = f.input :tier, label: "League", collection: ['Stone', 'Bronze', 'Silver', 'Gold'], input_html: { class: 'ui search dropdown'}
          .ui.field
            = f.input :card_type, collection: ['Summons', 'Buildings', 'Spells', 'Spawners'], input_html: { class: 'ui search dropdown'}
          .ui.field
            = f.input :stage, collection: [1,2,3], input_html: { class: 'ui search dropdown'}
          .ui.field
            = f.input :cooldown
        .column
          .ui.field
            = f.input :cost
          .ui.field
            = f.input :squad_size
          .ui.field
            = f.input :health
          .ui.field
            = f.input :armor, collection: ['Unarmored', 'Light', 'Medium', 'Heavy', 'Fortified'], input_html: { class: 'ui search dropdown'}
          .ui.field
            = f.input :range
          .ui.field
            = f.input :damage
          .ui.field
            = f.input :attack_speed

  %h3 Abilities
  #abilities
    = f.simple_fields_for :abilities do |ability|
      = render 'ability_fields', f: ability
    .links
      = link_to_add_association 'add ability', f, :abilities, class: 'ui secondary button'

  .ui.divider
  .form-actions
    = f.button :submit, class: 'ui primary right floated button'

:javascript
  $('select.dropdown').dropdown();